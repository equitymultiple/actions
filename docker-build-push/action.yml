name: "Docker Build and Push (ECR)"
description: "Build and push an docker image to ECR"
inputs:
  aws-region:
    description: "Which AWS region to use for ECR repository"
    required: false
    default: "us-east-2"
  iam-role:
    description: "IAM Role to use with OIDC authentication"
    required: true
  cross-account-iam-role:
    description: "Cross-account account role to assume"
    required: false
    default: ""
  repository:
    description: "ECR image repository URL"
    required: true
  version:
    description: "Version for the docker image"

outputs:
  tag:
    description: "Docker image tag that was pushed"

runs:
  using: "composite"
  steps:
  - name: AWS Credentials
    uses: aws-actions/configure-aws-credentials@v1
    with:
      aws-region: ${{ inputs.region }}
      role-to-assume: ${{ inputs.iam-role }}

  - name: AWS Credentials
    uses: aws-actions/configure-aws-credentials@v1
    if: inputs.cross-account-iam-role != ''
    with:
      aws-region: ${{ inputs.region }}
      role-to-assume: ${{ inputs.cross-account-iam-role }}
      aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
      aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
      aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
      role-skip-session-tagging: true
      role-duration-seconds: 3000

  - name: Login to Amazon ECR
    id: login-ecr
    uses: aws-actions/amazon-ecr-login@v1

  - name: Set up Docker Buildx
    uses: docker/setup-buildx-action@v2

  - name: Build image
    uses: docker/build-push-action@v2
    with:
      push: true
      tags: ${{ inputs.repository }}:${{ inputs.version }}
